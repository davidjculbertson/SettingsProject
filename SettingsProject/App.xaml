<Application
  x:Class="SettingsProject.App"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:local="clr-namespace:SettingsProject"
  mc:Ignorable="d"
  StartupUri="ProjectSettingsWindow.xaml">

  <Application.Resources>

    <ResourceDictionary>

      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Icons.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <DataTemplate x:Key="UnconfiguredStringSettingValueTemplate" DataType="local:SettingValue">
        <TextBox Text="{Binding EvaluatedValue, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" />
      </DataTemplate>

      <DataTemplate x:Key="ConfiguredStringSettingValueTemplate" DataType="local:SettingValue">
        <DockPanel Margin="0,2">
          <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap">
            <TextBlock.Text>
              <MultiBinding Converter="{x:Static local:Converters.DimensionNames}">
                <Binding Path="ConfigurationDimensions" />
                <Binding Path="Parent.Context.DimensionOrder" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
          <TextBox Text="{Binding EvaluatedValue, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" />
        </DockPanel>
      </DataTemplate>

      <DataTemplate x:Key="UnconfiguredMultilineStringSettingValueTemplate" DataType="local:SettingValue">
        <TextBox Text="{Binding EvaluatedValue, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="NoWrap" MinHeight="42" MaxHeight="200" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" />
      </DataTemplate>

      <DataTemplate x:Key="ConfiguredMultilineStringSettingValueTemplate" DataType="local:SettingValue">
        <DockPanel Margin="0,2">
          <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap">
            <TextBlock.Text>
              <MultiBinding Converter="{x:Static local:Converters.DimensionNames}">
                <Binding Path="ConfigurationDimensions" />
                <Binding Path="Parent.Context.DimensionOrder" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
          <TextBox Text="{Binding EvaluatedValue, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="True" TextWrapping="NoWrap" MinHeight="42" MaxHeight="200" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" />
        </DockPanel>
      </DataTemplate>

      <DataTemplate x:Key="UnconfiguredBoolSettingValueTemplate" DataType="local:SettingValue">
        <CheckBox IsChecked="{Binding EvaluatedValue}" HorizontalAlignment="Left">
          <local:HighlightTextBlock HighlightText="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:SettingsList}, Path=SearchText}" Text="{Binding Parent.Description}" TextWrapping="Wrap" />
        </CheckBox>
      </DataTemplate>

      <DataTemplate x:Key="ConfiguredBoolSettingValueTemplate" DataType="local:SettingValue">
        <CheckBox Margin="0,2" IsChecked="{Binding EvaluatedValue}" HorizontalAlignment="Left">
          <TextBlock TextWrapping="Wrap">
            <TextBlock.Text>
              <MultiBinding Converter="{x:Static local:Converters.DimensionNames}">
                <Binding Path="ConfigurationDimensions" />
                <Binding Path="Parent.Context.DimensionOrder" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
        </CheckBox>
      </DataTemplate>

      <DataTemplate x:Key="UnconfiguredEnumSettingValueTemplate" DataType="local:SettingValue">
        <ComboBox 
          DataContext="{Binding Converter={x:Static local:Converters.SettingValueComboBoxViewModel}}"
          d:DataContext="{d:DesignInstance local:SettingValueComboBoxViewModel}"
          ItemsSource="{Binding SupportedValues}"
          DisplayMemberPath="DisplayName"
          SelectedItem="{Binding SelectedValue}" />
      </DataTemplate>

      <DataTemplate x:Key="ConfiguredEnumSettingValueTemplate" DataType="local:SettingValue">
        <DockPanel Margin="0,2">
          <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap">
            <TextBlock.Text>
              <MultiBinding Converter="{x:Static local:Converters.DimensionNames}">
                <Binding Path="ConfigurationDimensions" />
                <Binding Path="Parent.Context.DimensionOrder" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
          <ComboBox
            DataContext="{Binding Converter={x:Static local:Converters.SettingValueComboBoxViewModel}}"
            d:DataContext="{d:DesignInstance local:SettingValueComboBoxViewModel}"
            ItemsSource="{Binding SupportedValues}"
            DisplayMemberPath="DisplayName"
            SelectedItem="{Binding SelectedValue}" />
        </DockPanel>
      </DataTemplate>

      <DataTemplate x:Key="UnconfiguredFileBrowseSettingValueTemplate" DataType="local:SettingValue">
        <DockPanel HorizontalAlignment="Left">
          <Button DockPanel.Dock="Right" Content="{x:Static local:Resources.FileBrowseEditorBrowseButtonText}" Margin="8,0,0,0" Padding="6,0" Command="{x:Static local:FileBrowseEditor.BrowseCommand}" CommandParameter="{Binding}" />
          <TextBox Text="{Binding EvaluatedValue, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" />
        </DockPanel>
      </DataTemplate>

      <DataTemplate x:Key="ConfiguredFileBrowseSettingValueTemplate" DataType="local:SettingValue">
        <DockPanel Margin="0,2" HorizontalAlignment="Left">
          <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap">
            <TextBlock.Text>
              <MultiBinding Converter="{x:Static local:Converters.DimensionNames}">
                <Binding Path="ConfigurationDimensions" />
                <Binding Path="Parent.Context.DimensionOrder" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
          <Button DockPanel.Dock="Right" Content="{x:Static local:Resources.FileBrowseEditorBrowseButtonText}" Margin="8,0,0,0" Padding="6,0" Command="{x:Static local:FileBrowseEditor.BrowseCommand}" CommandParameter="{Binding}" />
          <TextBox Text="{Binding EvaluatedValue, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" />
        </DockPanel>
      </DataTemplate>

      <!-- Setting data templates -->

      <DataTemplate x:Key="LinkActionTemplate" DataType="{x:Type local:Setting}">
        <DockPanel Margin="0,0,0,24" Background="Transparent">
          <local:HighlightTextBlock
            DockPanel.Dock="Top"
            Margin="28,0,0,4"
            HighlightText="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:SettingsList}, Path=SearchText}"
            Text="{Binding Converter={x:Static local:Converters.LinkActionHeading}}"
            FontWeight="Bold">
            <local:HighlightTextBlock.Visibility>
              <MultiBinding Converter="{x:Static local:Converters.DescriptionVisibility}">
                <Binding />
                <Binding Path="Description" />
                <Binding Path="Values" />
              </MultiBinding>
            </local:HighlightTextBlock.Visibility>
          </local:HighlightTextBlock>
          <TextBlock Margin="28,0,0,6">
            <Hyperlink Command="{x:Static local:LinkActionCommandHandler.ActionCommand}" CommandParameter="{Binding}">
              <Run Text="{Binding Converter={x:Static local:Converters.LinkActionLinkText}, Mode=OneTime}" />
            </Hyperlink>
          </TextBlock>
        </DockPanel>
      </DataTemplate>

      <DataTemplate x:Key="GenericSettingTemplate" DataType="local:Setting">
        <DockPanel Margin="0,0,0,24" Background="Transparent">
          <Menu
            DockPanel.Dock="Left"
            Margin="0,2,0,0"
            Width="16"
            Height="16"
            VerticalAlignment="Top"
            HorizontalAlignment="Left"
            IsTabStop="False"
            Focusable="False"
            Name="CommandMenuButton"
            Visibility="{Binding SupportsPerConfigurationValues, Converter={x:Static local:Converters.HiddenWhenFalse}}">
            <Menu.Template>
              <ControlTemplate TargetType="{x:Type Menu}">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              </ControlTemplate>
            </Menu.Template>
            <MenuItem Cursor="Hand" ItemsSource="{Binding Path=Context.ConfigurationCommands}" UsesItemContainerTemplate="False">
              <MenuItem.Header>
                <Rectangle Fill="{StaticResource SettingsIconBrush}" Width="16" Height="16" />
              </MenuItem.Header>
              <MenuItem.Template>
                <ControlTemplate TargetType="MenuItem">
                  <Grid Background="Transparent">
                    <ContentPresenter Name="HeaderHost" ContentSource="Header" VerticalAlignment="Center" RecognizesAccessKey="True" />
                    <Popup
                      x:Name="PART_Popup"
                      AllowsTransparency="true"
                      Placement="Bottom"
                      IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                      Focusable="false"
                      PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                      <Border
                        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                        BorderThickness="1"
                        Margin="0,0,8,8"
                        Padding="2">
                        <Border.Effect>
                          <DropShadowEffect Opacity="0.3" BlurRadius="4" ShadowDepth="3" />
                        </Border.Effect>
                        <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" Grid.IsSharedSizeScope="true" />
                      </Border>
                    </Popup>
                  </Grid>
                </ControlTemplate>
              </MenuItem.Template>
              <MenuItem.ItemContainerStyle>
                <Style d:DataContext="{d:DesignInstance local:ISettingConfigurationCommand}">
                  <Setter Property="MenuItem.Header" Value="{Binding Caption}" />
                  <Setter Property="MenuItem.IsChecked">
                    <Setter.Value>
                      <MultiBinding Converter="{x:Static local:Converters.SettingConfigurationCommandChecked}" Mode="OneWay">
                        <Binding />
                        <Binding Path="DataContext.Values" RelativeSource="{RelativeSource FindAncestor, AncestorType=Menu}" />
                      </MultiBinding>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="MenuItem.IsEnabled">
                    <Setter.Value>
                      <MultiBinding Converter="{x:Static local:Converters.SettingConfigurationCommandEnabled}" Mode="OneWay">
                        <Binding />
                        <Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType=Menu}" />
                      </MultiBinding>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="MenuItem.Command" Value="{Binding Path=Command}" />
                  <Setter Property="MenuItem.CommandParameter" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Menu}}, Path=DataContext}" />
                </Style>
              </MenuItem.ItemContainerStyle>
            </MenuItem>
          </Menu>
          <local:HighlightTextBlock DockPanel.Dock="Top" Margin="12,0,0,4" HighlightText="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:SettingsList}, Path=SearchText}" Text="{Binding Name}" FontWeight="Bold" />
          <local:HighlightTextBlock DockPanel.Dock="Top" Margin="12,0,0,6" HighlightText="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:SettingsList}, Path=SearchText}" Text="{Binding Description}" TextWrapping="Wrap">
            <local:HighlightTextBlock.Visibility>
              <MultiBinding Converter="{x:Static local:Converters.DescriptionVisibility}" Mode="OneWay">
                <Binding />
                <Binding Path="Description" />
                <Binding Path="Values" />
              </MultiBinding>
            </local:HighlightTextBlock.Visibility>
          </local:HighlightTextBlock>
          <ItemsControl ItemsSource="{Binding Values}" IsTabStop="False" Focusable="False">
            <ItemsControl.ItemTemplate>
              <DataTemplate DataType="local:SettingValue">
                <ContentPresenter Content="{Binding}" ContentTemplate="{Binding Path=Template}" Margin="12,0,0,0" />
              </DataTemplate>
            </ItemsControl.ItemTemplate>
          </ItemsControl>
        </DockPanel>
        <DataTemplate.Triggers>
          <Trigger Property="IsMouseOver" Value="False">
            <Setter TargetName="CommandMenuButton" Property="Visibility" Value="Hidden" />
          </Trigger>
          <DataTrigger Binding="{Binding ElementName=ContextMenu, Path=IsOpen}" Value="True">
            <Setter TargetName="CommandMenuButton" Property="Visibility" Value="Visible" />
          </DataTrigger>
        </DataTemplate.Triggers>
      </DataTemplate>

    </ResourceDictionary>

  </Application.Resources>

</Application>